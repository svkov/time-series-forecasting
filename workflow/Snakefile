configfile: 'workflow\\config.yaml' # noqa

include: 'rules\\download_data.smk' # noqa
include: 'rules\\process_data.smk' # noqa
include: 'rules\\forecast.smk' # noqa
include: 'rules\\reports.smk' # noqa
include: 'rules\\trade.smk' # noqa
include: 'rules\\latex.smk' # noqa

rule all:
    input:
        download=expand('data\\raw\\data_{ticker}.csv', ticker=config['tickers']),
        dag='dag.svg',
        figures_raw=expand('reports\\figures_raw\\{ticker}.png', ticker=config['tickers']),
        aggregated=expand('reports\\forecast\\aggregated\\{ticker}.csv', ticker=config['tickers']),
        forecast_figures=expand('reports\\forecast\\figures\\{ticker}.png', ticker=config['tickers']),
        processed_trade=expand('data\\processed\\trade\\{ticker}.csv', ticker=config['tickers']),
        trade_window_sizes=expand('reports\\trade\\window_sizes\\{ticker}.json', ticker=config['tickers']),
        trade_forecast=expand('reports\\trade\\forecast\\{ticker}.json', ticker=config['tickers']),
        trade_figures_accuracy=expand('reports\\trade\\figures_accuracy\\{ticker}.png', ticker=config['tickers']),
        trade_simulation='reports\\trade\\simulation\\result.csv',
        processed='data\\processed\\all.csv',
        diploma='reports\\diploma.tex',
        final='spbu_diploma\\main_example.pdf',
        forecast_metrics='reports\\forecast\\metrics\\best\\metrics.csv',
        trade_hist='reports\\trade\\figures\\hist.png',
        imbalance_plots='reports\\trade\\figures\\function_to_optimize.png',
        nn=expand('reports\\forecast\\nn_{ticker}.csv', ticker=config['tickers'])
    log: 'logs/all.log'
    conda: 'envs/default.yaml'
    shell:
         'echo Ready && telegram-send Готово!'


rule generate_dag:
    output: 'dag.svg'
    log: 'logs\\dag.log'
    conda: 'envs/default.yaml'
    shell: 'snakemake --dag spbu_diploma/main_example.pdf | dot -Tsvg > dag.svg'